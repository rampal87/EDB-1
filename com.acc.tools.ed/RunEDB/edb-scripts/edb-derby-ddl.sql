create schema ENGAGEMENT;

--Project

CREATE TABLE ENGAGEMENT.EDB_PROJECT (
  PROJ_ID int NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), --Project Id
  PRGM varchar(50) NOT NULL, --Program CCSP,NDC,AO etc
  PROJ_NAME varchar(20) NOT NULL,
  PROJ_LEAD varchar(20) NOT NULL,
  PROJ_ST_DT DATE NOT NULL, -- Project start Date
  PROJ_ET_DT DATE NOT NULL, -- Project end Date
  PROJ_REV_ET_DT DATE , -- Project revised end Date
  PROJ_DESC varchar(200) NOT NULL, --Project description
  PROJ_PHSE varchar(100) NOT NULL,
  PROJ_RESRCS varchar(300) NOT NULL
) ;


--Milestone (Release)
CREATE TABLE ENGAGEMENT.EDB_MILESTONE (
  MLSTN_ID int NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
  PROJ_ID int NOT NULL,
  MLSTN_NAME varchar(40) NOT NULL,
  MLSTN_DESC varchar(200) default NULL,
  MLSTN_ST_DT date NOT NULL,
  MLSTN_END_DT date NOT NULL,
  MLSTN_REV_END_DT date default NULL, -- Revised End Date
  MLSTN_ARTIFACTS varchar(200),
  MLSTN_PLN_HRS int,
  MLSTN_WRK_CMPLTD int ,
  MLSTN_WRK_STATUS varchar(50)
) ;


-- Projects and the respective components
CREATE TABLE ENGAGEMENT.EDB_PROJ_COMPNT (
  COMPNT_ID int NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
  PROJ_ID int NOT NULL,
  COMPNT_NAME varchar(150) default NULL,
  COMPNT_TYP varchar(20) NOT NULL,
  COMPNT_ST_DT date NOT NULL,
  COMPNT_END_DT date NOT NULL,
  COMPNT_REV_END_DT date NOT NULL, --Revised end date
  COMPNT_REV_END_DT_RSN varchar(200), -- Reason for Revise end date
  COMPNT_PLN_HRS int,
  COMPNT_WRK_CMPLTD int ,
  COMPNT_WRK_STATUS varchar(50)
) ;

ALTER TABLE ENGAGEMENT.EDB_PROJ_COMPNT ADD FOREIGN KEY (PROJ_ID) REFERENCES ENGAGEMENT.EDB_PROJECT(PROJ_ID);


-- Resource Master table
CREATE TABLE ENGAGEMENT.EDB_MSTR_EMP_DTLS (
 EMP_ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
 EMP_RESOURCE_NAME varchar(100) NOT NULL,
 EMP_ENTERPRISE_ID varchar(100) NOT NULL,
 EMP_EMPLOYEE_ID varchar(100) NOT NULL PRIMARY KEY ,
 EMP_RRD_NO varchar(100) ,
 EMP_ACTIVE_RESOURCE varchar(100) ,
 EMP_LEVEL varchar(100) ,
 EMP_ROLE varchar(100) ,
 EMP_BILL_CODE varchar(100) ,
 EMP_PROJECT varchar(100)  ,
 EMP_PROJECT_START_DATE date  ,
 EMP_WORK_LOCATION varchar(100)  ,
 EMP_DESK_NO varchar(100)  ,
 EMP_ASSET_TAG_NO varchar(100)  ,
 EMP_SERVICE_TAG_NO varchar(100)  ,
 EMP_780_MACHINE varchar(100)  ,
 EMP_4GB_RAM varchar(100)  ,
 EMP_HARDLOCK_DATE date  ,
 EMP_IJP_ROLLOFF_DATE date  ,
 EMP_MOBILE_NO varchar(100)  ,
 EMP_DOJ_ACCENTURE date  ,
 EMP_RSA_TOKEN_NO varchar(100)  ,
 EMP_RSA_EXPIRY_DATE date  ,
 EMP_SEZ_ID_NO varchar(100)  ,
 EMP_SEZ_ID_EXPIRY_DATE date  
 
);


-- Login table
CREATE TABLE ENGAGEMENT.EDB_LOGIN (
	LOGIN_ID int NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY
        (START WITH 1, INCREMENT BY 1),
	EMP_EMPLOYEE_ID varchar(100) NOT NULL,
	EMP_PASS varchar(150) NOT NULL
);

ALTER TABLE ENGAGEMENT.EDB_LOGIN ADD FOREIGN KEY (EMP_EMPLOYEE_ID) REFERENCES ENGAGEMENT.EDB_MSTR_EMP_DTLS(EMP_EMPLOYEE_ID);


--Milestone Deliverables
CREATE TABLE ENGAGEMENT.EDB_MILESTONE_DELVRBLS (
  DELVRBL_ID int NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
  MLSTN_ID int NOT NULL,
  PROJ_ID int NOT NULL,
  COMPNT_ID int NOT NULL,
  EMP_EMPLOYEE_ID int NOT NULL,
  DELVRBL_NAME varchar(40) NOT NULL,
  DELVRBL_DESC varchar(200) default NULL,
  DELVRBL_ST_DT date NOT NULL,
  DELVRBL_END_DT date NOT NULL,
  DELVRBL_REV_END_DT date default NULL, -- Revised End Date
  MLSTN_WRK_CMPLTD int ,
  MLSTN_WRK_STATUS varchar(50)
) ;


ALTER TABLE ENGAGEMENT.EDB_MILESTONE_DELVRBLS ADD FOREIGN KEY (PROJ_ID) REFERENCES ENGAGEMENT.EDB_PROJECT(PROJ_ID);
ALTER TABLE ENGAGEMENT.EDB_MILESTONE_DELVRBLS ADD FOREIGN KEY (MLSTN_ID) REFERENCES ENGAGEMENT.EDB_MILESTONE(MLSTN_ID);
ALTER TABLE ENGAGEMENT.EDB_MILESTONE_DELVRBLS ADD FOREIGN KEY (COMPNT_ID) REFERENCES ENGAGEMENT.EDB_PROJ_COMPNT(COMPNT_ID);
ALTER TABLE ENGAGEMENT.EDB_MILESTONE_DELVRBLS ADD FOREIGN KEY (EMP_EMPLOYEE_ID) REFERENCES ENGAGEMENT.EDB_MSTR_EMP_DTLS(EMP_EMPLOYEE_ID);

 
